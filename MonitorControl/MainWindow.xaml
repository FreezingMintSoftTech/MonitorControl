<metro:Window x:Class="MonitorControl.MainWindow" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
              xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
              xmlns:metro="http://schemas.codeplex.com/elysium/theme"
              xmlns:params="http://schemas.codeplex.com/elysium/theme/params" 
              xmlns:MonitorControl="clr-namespace:MonitorControl"

              xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
              xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
              xmlns:tb="clr-namespace:Hardcodet.Wpf.TaskbarNotification;assembly=Hardcodet.Wpf.TaskbarNotification"
              xmlns:design="http://schemas.codeplex.com/elysium/theme/design"
              xmlns:ViewModels="clr-namespace:MonitorControl.ViewModels" mc:Ignorable="d"
              
              design:ThemeManager.Theme="Dark"
              design:ThemeManager.AccentBrush="{x:Static metro:AccentBrushes.Blue}"
              design:ThemeManager.ContrastBrush="White"
              
              WindowStartupLocation="CenterScreen"
              Width="1024" Height="540"
  
              Title="MonitorControl"
              
              d:DataContext="{d:DesignInstance Type=ViewModels:ViewModel}"
              
              StateChanged="HandleStateChanged"
              
              Icon="Resources\Brightness_white.ico"
              >

  <metro:Window.Resources>
    <ResourceDictionary>
      <GeometryGroup x:Key="SampleIcon16px">
        <RectangleGeometry Rect="2.5,2.5,1,1"/>
        <RectangleGeometry Rect="7.5,2.5,1,1"/>
        <RectangleGeometry Rect="12.5,2.5,1,1"/>
        <RectangleGeometry Rect="2.5,7.5,1,1"/>
        <RectangleGeometry Rect="7.5,7.5,1,1"/>
        <RectangleGeometry Rect="12.5,7.5,1,1"/>
        <RectangleGeometry Rect="2.5,12.5,1,1"/>
        <RectangleGeometry Rect="7.5,12.5,1,1"/>
        <RectangleGeometry Rect="12.5,12.5,1,1"/>
      </GeometryGroup>
    </ResourceDictionary>
  </metro:Window.Resources>
  <metro:Window.ApplicationBar>
    <metro:ApplicationBar>
      <metro:DropDownCommandButton Header="Theme type"
                                   Margin="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldPadding), Mode=OneWay}">
        <Glyphs x:Name="ThemeGlyph"
                Initialized="ThemeGlyphInitialized"
                FontRenderingEmSize="24"
                StyleSimulations="BoldSimulation"
                UnicodeString="T"
                Fill="Black"
                OriginX="0" OriginY="0"/>
        <metro:DropDownCommandButton.Submenu>
          <metro:Submenu>
            <MenuItem Header="Light theme"
                      Click="LightClick"/>
            <MenuItem Header="Dark theme"
                      Click="DarkClick"/>
          </metro:Submenu>
        </metro:DropDownCommandButton.Submenu>
      </metro:DropDownCommandButton>
      <metro:DropDownCommandButton Header="Accent color"
                                   Margin="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldPadding), Mode=OneWay}">
        <Glyphs x:Name="AccentGlyph"
                Initialized="AccentGlyphInitialized"
                FontRenderingEmSize="24"
                StyleSimulations="BoldSimulation"
                UnicodeString="A"
                Fill="Black"
                OriginX="0" OriginY="0"/>
        <metro:DropDownCommandButton.Submenu>
          <metro:Submenu>
            <MenuItem Header="Blue"
                      Click="AccentClick">
              <MenuItem.Icon>
                <Rectangle Fill="{x:Static metro:AccentBrushes.Blue}"
                           Width="16" Height="16"/>
              </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Brown"
                      Click="AccentClick">
              <MenuItem.Icon>
                <Rectangle Fill="{x:Static metro:AccentBrushes.Brown}"
                           Width="16" Height="16"/>
              </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Green"
                      Click="AccentClick">
              <MenuItem.Icon>
                <Rectangle Fill="{x:Static metro:AccentBrushes.Green}"
                           Width="16" Height="16"/>
              </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Lime"
                      Click="AccentClick">
              <MenuItem.Icon>
                <Rectangle Fill="{x:Static metro:AccentBrushes.Lime}"
                           Width="16" Height="16"/>
              </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Magenta"
                      Click="AccentClick">
              <MenuItem.Icon>
                <Rectangle Fill="{x:Static metro:AccentBrushes.Magenta}"
                           Width="16" Height="16"/>
              </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Mango"
                      Click="AccentClick">
              <MenuItem.Icon>
                <Rectangle Fill="{x:Static metro:AccentBrushes.Mango}"
                           Width="16" Height="16"/>
              </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Orange"
                      Click="AccentClick">
              <MenuItem.Icon>
                <Rectangle Fill="{x:Static metro:AccentBrushes.Orange}"
                           Width="16" Height="16"/>
              </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Pink"
                      Click="AccentClick">
              <MenuItem.Icon>
                <Rectangle Fill="{x:Static metro:AccentBrushes.Pink}"
                           Width="16" Height="16"/>
              </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Purple"
                      Click="AccentClick">
              <MenuItem.Icon>
                <Rectangle Fill="{x:Static metro:AccentBrushes.Purple}"
                           Width="16" Height="16"/>
              </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Red"
                      Click="AccentClick">
              <MenuItem.Icon>
                <Rectangle Fill="{x:Static metro:AccentBrushes.Red}"
                           Width="16" Height="16"/>
              </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Rose"
                      Click="AccentClick">
              <MenuItem.Icon>
                <Rectangle Fill="{x:Static metro:AccentBrushes.Rose}"
                           Width="16" Height="16"/>
              </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Sky"
                      Click="AccentClick">
              <MenuItem.Icon>
                <Rectangle Fill="{x:Static metro:AccentBrushes.Sky}"
                           Width="16" Height="16"/>
              </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Viridian"
                      Click="AccentClick">
              <MenuItem.Icon>
                <Rectangle Fill="{x:Static metro:AccentBrushes.Viridian}"
                           Width="16" Height="16"/>
              </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Violet"
                      Click="AccentClick">
              <MenuItem.Icon>
                <Rectangle Fill="{x:Static metro:AccentBrushes.Violet}"
                           Width="16" Height="16"/>
              </MenuItem.Icon>
            </MenuItem>
          </metro:Submenu>
        </metro:DropDownCommandButton.Submenu>
      </metro:DropDownCommandButton>
      <metro:DropDownCommandButton Header="Contrast color"
                                   Margin="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldPadding), Mode=OneWay}">
        <Glyphs x:Name="ContrastGlyph"
                Initialized="ContrastGlyphInitialized"
                FontRenderingEmSize="24"
                StyleSimulations="BoldSimulation"
                UnicodeString="C"
                Fill="Black"
                OriginX="0" OriginY="0"/>
        <metro:DropDownCommandButton.Submenu>
          <metro:Submenu>
            <MenuItem Header="White"
                      Click="WhiteClick"/>
            <MenuItem Header="Black"
                      Click="BlackClick"/>
          </metro:Submenu>
        </metro:DropDownCommandButton.Submenu>
      </metro:DropDownCommandButton>
      <metro:DropDownCommandButton Header="More"
                                   metro:ApplicationBar.Dock="Right"
                                   Margin="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldPadding), Mode=OneWay}">
        <Path Data="{StaticResource AdvancedIcon}"
              Fill="Black"
              Stroke="Black"
              Width="24" Height="24"/>
        <metro:DropDownCommandButton.Submenu>
          <metro:Submenu>
<!--            <MenuItem Header="Authors" Click="AuthorsClick"/>-->
<!--            <MenuItem Header="License" Click="LicenseClick"/>-->
<!--            <MenuItem Header="Donate" Click="DonateClick"/>-->
          </metro:Submenu>
        </metro:DropDownCommandButton.Submenu>
      </metro:DropDownCommandButton>
    </metro:ApplicationBar>
  </metro:Window.ApplicationBar>

  
  <TabControl Margin="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldPadding), Mode=OneWay}">

    <TabItem Header="Brightness">
      <Grid>
        <ListBox ItemsSource="{Binding Monitors}" HorizontalContentAlignment="Stretch">
          <ListBox.ItemTemplate>
            <DataTemplate DataType="ViewModels:MonitorVM">
              <DockPanel LastChildFill="true">
                <TextBlock Margin="5" Text="{Binding Name}" TextTrimming="WordEllipsis" Width="200"></TextBlock>
                <TextBlock Margin="5" Text="{Binding BrightnessPercent, StringFormat={}{0:p0}}" Width="40"></TextBlock>
                <Slider MinWidth="100" Margin="5" Value="{Binding Brightness}" IsEnabled="{Binding CanSetBrightness}"
                        Maximum="{Binding BrightnessMax}" Minimum="{Binding BrightnessMin}" Width="Auto"
                        IsMoveToPointEnabled="true" />
              </DockPanel>
            </DataTemplate>
          </ListBox.ItemTemplate>
        </ListBox>
      </Grid>
    </TabItem>

    <TabItem Header="Contrast">
      <Grid>
        <ListBox ItemsSource="{Binding Monitors}" HorizontalContentAlignment="Stretch">
          <ListBox.ItemTemplate>
            <DataTemplate DataType="ViewModels:MonitorVM">
              <DockPanel LastChildFill="true">
                <TextBlock Margin="5" Text="{Binding Name}" TextTrimming="WordEllipsis" Width="200"></TextBlock>
                <TextBlock Margin="5" Text="{Binding ContrastPercent, StringFormat={}{0:p0}}" Width="40"></TextBlock>
                <Slider MinWidth="100" Margin="5" Value="{Binding Contrast}" IsEnabled="{Binding CanSetContrast}"
                        Maximum="{Binding ContrastMax}" Minimum="{Binding ContrastMin}" Width="Auto"
                        IsMoveToPointEnabled="true" />
              </DockPanel>
            </DataTemplate>
          </ListBox.ItemTemplate>
        </ListBox>
      </Grid>
    </TabItem>

    <TabItem Header="Profiles">
      <Grid>
      </Grid>

    </TabItem>

    <TabItem Header="TrayPlaceHolder" Visibility="Collapsed">
      <tb:TaskbarIcon
          x:Name="TrayIcon"
          IconSource="Resources\Brightness_white.ico"
          ToolTipText="MonitorControl"
          PopupActivation="LeftClick"
          
          TrayMouseDoubleClick="HandleTrayMouseDoubleClick"
          >

        <tb:TaskbarIcon.ContextMenu>
          <ContextMenu>
            <MenuItem Header="Brightness">
              <MenuItem.Icon>
                <Path Data="{StaticResource SampleIcon16px}"
                      Fill="{DynamicResource AccentBrush}"
                      Stroke="{DynamicResource AccentBrush}"
                      Width="16" Height="16"/>
              </MenuItem.Icon>
              <ListBox ItemsSource="{Binding Monitors}" HorizontalContentAlignment="Stretch">
                <ListBox.ItemTemplate>
                  <DataTemplate DataType="ViewModels:MonitorVM">
                    <DockPanel LastChildFill="true">
                      <TextBlock Margin="5" Text="{Binding Name}" TextTrimming="WordEllipsis" Width="200"></TextBlock>
                      <TextBlock Margin="5" Text="{Binding BrightnessPercent, StringFormat={}{0:p0}}" Width="40"></TextBlock>
                      <Slider MinWidth="100" Margin="5" Value="{Binding Brightness}" IsEnabled="{Binding CanSetBrightness}"
                              Maximum="{Binding BrightnessMax}" Minimum="{Binding BrightnessMin}" Width="Auto"
                              IsMoveToPointEnabled="true" />
                    </DockPanel>
                  </DataTemplate>
                </ListBox.ItemTemplate>
              </ListBox>
            </MenuItem>
            <MenuItem Header="Contrast">
              <ListBox ItemsSource="{Binding Monitors}" HorizontalContentAlignment="Stretch">
                <ListBox.ItemTemplate>
                  <DataTemplate DataType="ViewModels:MonitorVM">
                    <DockPanel LastChildFill="true">
                      <TextBlock Margin="5" Text="{Binding Name}" TextTrimming="WordEllipsis" Width="200"></TextBlock>
                      <TextBlock Margin="5" Text="{Binding ContrastPercent, StringFormat={}{0:p0}}" Width="40"></TextBlock>
                      <Slider MinWidth="100" Margin="5" Value="{Binding Contrast}" IsEnabled="{Binding CanSetContrast}"
                              Maximum="{Binding ContrastMax}" Minimum="{Binding ContrastMin}" Width="Auto"
                              IsMoveToPointEnabled="true" />
                    </DockPanel>
                  </DataTemplate>
                </ListBox.ItemTemplate>
              </ListBox>
            </MenuItem>
            
<!--            <MenuItem Header="First item"/>-->
<!--            <MenuItem Header="First checkable item"-->
<!--                      IsCheckable="True"-->
<!--                      IsChecked="True"/>-->
<!--            <MenuItem Header="First item with icon">-->
<!--            </MenuItem>-->
<!--            <MenuItem Header="First expandable item">-->
<!--                <MenuItem Header="Second checkable item"-->
<!--                        IsCheckable="True"-->
<!--                        IsChecked="True"/>-->
<!--              <MenuItem Header="Second disabled item"-->
<!--                        IsEnabled="False"/>-->
<!--              <MenuItem Header="Second expandable item">-->
<!--                <MenuItem Header="3rd item"/>-->
<!--                <MenuItem Header="4th item"/>-->
<!--              </MenuItem>-->
<!--            </MenuItem>-->
<!--            <MenuItem Header="First disabled item"-->
<!--                      IsEnabled="False"/>-->
          </ContextMenu>
        </tb:TaskbarIcon.ContextMenu>

        <tb:TaskbarIcon.TrayPopup>
          <Border
            Background="{DynamicResource BackgroundBrush}"
            BorderBrush="{DynamicResource MiddleLightBrush}"
            BorderThickness="0"
            Width="Auto"
            Height="Auto"
            >

            <ListBox ItemsSource="{Binding Monitors}" HorizontalContentAlignment="Stretch">
              <ListBox.ItemTemplate>
                <DataTemplate DataType="ViewModels:MonitorVM">
                  <DockPanel LastChildFill="true">
                    <TextBlock Margin="5" Text="{Binding Name}" TextTrimming="WordEllipsis" Width="150"></TextBlock>
                    <TextBlock Margin="5" Text="{Binding BrightnessPercent, StringFormat={}{0:p0}}" Width="40"></TextBlock>
                    <Slider MinWidth="100" Margin="5" Value="{Binding Brightness}" IsEnabled="{Binding CanSetBrightness}"
                            Maximum="{Binding BrightnessMax}" Minimum="{Binding BrightnessMin}" Width="Auto"
                            IsMoveToPointEnabled="true" />
                  </DockPanel>
                </DataTemplate>
              </ListBox.ItemTemplate>
            </ListBox>
          </Border>
        </tb:TaskbarIcon.TrayPopup>
      </tb:TaskbarIcon>

    </TabItem>
  </TabControl>
  
  
</metro:Window>